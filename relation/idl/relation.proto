syntax = "proto3";
package idl;
option go_package="relationdemo";

message  BaseResp {
  int64 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  int64 service_time = 3;
}




message RelationActionRequest{
  int64 user_id = 1;
  int64 to_user_id = 2;
  int64 action_type = 3;
}

message RelationActionResponse{
  BaseResp baseresp = 1;
}

message RelationFollowListRequest{
  int64 user_id = 1;
}

message  RelationFollowListResponse {
  BaseResp baseResp = 1;
  repeated User user_list = 2;
}

message RelationFollowerListRequest {
  int64 user_id = 1; // 用户id
}

message RelationFollowerListResponse {
  BaseResp baseresp = 1;
  repeated User user_list = 2; // 用户列表
}

message RelationFriendListRequest{
  int64 user_id = 1;
}

message RelationFriendListResponse {
  BaseResp baseresp = 1;
  repeated FriendUser user_list = 2; // 用户列表
}

message User {
  int64 id = 1; // 用户id
  string name = 2; // 用户名称
  int64 follow_count = 3; // 关注总数
  int64 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
  string avatar = 6; //用户头像
  string background_image = 7; //用户个人页顶部大图
  string signature = 8; //个人简介
  int64 total_favorited = 9; //获赞数量
  int64 work_count = 10; //作品数量
  int64 favorite_count = 11; //点赞数量
}

message FriendUser {
  User user = 1;
  string message = 2; // 和该好友的最新聊天消息
  int64 msgType = 3; // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
}

enum RelationActionType{
  DeflualtAction = 0;
  FollowAction = 1;
  CancelAction = 2;

}
service RelationService{
  rpc Relation(RelationActionRequest) returns (RelationActionResponse){};
  rpc GetFollow(RelationFollowListRequest) returns (RelationFollowListResponse) {};
  rpc GetFollower(RelationFollowerListRequest) returns (RelationFollowerListResponse) {};
  rpc GetFriend(RelationFriendListRequest) returns (RelationFriendListResponse){};
}


