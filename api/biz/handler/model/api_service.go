// Code generated by hertz generator.

package model

import (
	"context"
	"douyin_backend_microService/api/biz/model"
	"douyin_backend_microService/api/biz/mw"
	"douyin_backend_microService/api/biz/rpc"
	"douyin_backend_microService/pkg/errno"
	"douyin_backend_microService/user/kitex_gen/userdemo"
	"fmt"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// RegisterUser .
// @router /douyin/user/register [POST]
func RegisterUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req model.DouyinUserRegisterRequest
	err = c.BindAndValidate(&req)
	fmt.Printf(req.Username)
	if err != nil {
		SendErrResponse(c, err)
		return
	}

	if len(req.Username) == 0 || len(req.Password) == 0 {
		SendErrResponse(c, errno.ParamErr)
		return
	}

	userId, err := rpc.CreateUser(ctx, &userdemo.CreateUserRequest{
		Name:     req.Username,
		Password: req.Password,
	})
	if err != nil {
		SendErrResponse(c, err)
		return
	}

	resp := new(model.DouyinUserRegisterResponse)
	resp.UserId = userId
	resp.StatusCode = 0

	c.JSON(consts.StatusOK, resp)
}

// LoginUser .
// @router /douyin/user/login [POST]
func LoginUser(ctx context.Context, c *app.RequestContext) {

	mw.JwtMiddleware.LoginHandler(ctx, c)
}
